{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY_WORK\\\\react-routing-test\\\\src\\\\components\\\\FriendZone.js\";\nimport React from 'react';\nimport UserMenu from './UserMenu';\nimport { DbHelper } from '../DbHelper';\nimport { Link } from 'react-router-dom';\nimport FlashMessage from './elements/FlashMessage';\n\nclass FriendZone extends React.Component {\n  constructor() {\n    super();\n\n    this.sendRequest = friend => {\n      let checkRequest = this.checkFriend(friend._id);\n\n      if (!checkRequest) {\n        DbHelper.insert('friend_requests', {\n          user_id: this.state.user._id,\n          friend_id: friend._id,\n          status: 'P'\n        });\n        this.props.dispatch({\n          type: 'SUCCESS',\n          message: 'Request is  sent'\n        });\n      } else {\n        this.props.dispatch({\n          type: 'ERROR',\n          message: 'Request is already sent'\n        });\n      }\n    };\n\n    this.searchFriends = event => {\n      let users = JSON.parse(localStorage.getItem('users'));\n      let keyword = event.target.value;\n      let resultData = [];\n      let searchUsersContent = [];\n\n      if (keyword) {\n        resultData = users.filter(i => {\n          return i._id !== this.state.user._id && i.name.indexOf(keyword) > -1;\n        });\n        resultData.forEach(i => {\n          searchUsersContent.push(React.createElement(\"div\", {\n            className: \"card\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"card-body d-flex\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"col\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, i.name), React.createElement(\"div\", {\n            className: \"col text-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: \"btn btn-primary btn-sm\",\n            disabled: this.checkFriend(i._id),\n            onClick: () => {\n              this.sendRequest(i);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, \"Send\")))));\n        });\n      } else {\n        searchUsersContent = [];\n      }\n\n      this.setState({\n        searchUsers: searchUsersContent\n      });\n    };\n\n    this.inviteFriends = () => {\n      let requestsList = JSON.parse(localStorage.getItem('friend_requests'));\n\n      if (!requestsList) {\n        requestsList = [];\n      }\n\n      let resultData = [];\n      let requestFriendContent = [];\n      resultData = requestsList.filter(i => {\n        return i.friend_id === this.state.user._id && i.status === 'P';\n      });\n      requestFriendContent = resultData.map(i => {\n        let user = DbHelper.find('users', [['_id', i.user_id]]);\n        return React.createElement(\"div\", {\n          className: \"card\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-body  text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: '/profile/' + user._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, user.name), \" \"), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-primary btn-sm\",\n          onClick: () => {\n            this.statusChangeRequest(i, 'A');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Accept\"), \" \", React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm\",\n          onClick: () => {\n            this.statusChangeRequest(i, 'R');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"Reject\"))));\n      });\n      this.setState({\n        'inviteFriends': requestFriendContent\n      });\n    };\n\n    this.state = {\n      errors: '',\n      success: '',\n      searchUsers: [],\n      inviteFriends: [],\n      friends: [],\n      user: JSON.parse(sessionStorage.getItem(\"_u\"))\n    };\n  }\n\n  componentDidMount() {\n    this.getFriendList();\n    this.inviteFriends();\n  }\n\n  checkFriend(friendId) {\n    let checkRequest = DbHelper.find('friend_requests', [['user_id', this.state.user._id], ['friend_id', friendId]]);\n    return checkRequest;\n  }\n\n  statusChangeRequest(friend, status) {\n    DbHelper.update('friend_requests', [['_id', friend._id]], {\n      'status': status\n    });\n\n    if (status === 'A') {\n      DbHelper.insert('friend_requests', {\n        friend_id: friend.user_id,\n        user_id: this.state.user._id,\n        status: 'A'\n      });\n    }\n\n    this.setState({\n      success: 'Request is  ' + (status === 'A' ? 'accepted' : 'rejected')\n    });\n    setTimeout(() => {\n      this.setState({\n        success: null\n      });\n    }, 3000);\n    this.inviteFriends();\n    this.getFriendList();\n  }\n\n  getFriendList() {\n    let requestsList = JSON.parse(localStorage.getItem('friend_requests'));\n\n    if (!requestsList) {\n      requestsList = [];\n    }\n\n    let resultData = [];\n    let friendContent = [];\n    resultData = requestsList.filter(i => {\n      return i.user_id === this.state.user._id && i.status === 'A';\n    });\n    friendContent = resultData.map(i => {\n      let user = DbHelper.find('users', [['_id', i.friend_id]]);\n      return React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: '/profile/' + user._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, user.name))));\n    });\n    this.setState({\n      'friends': friendContent\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Friend Zone\")), React.createElement(\"div\", {\n      className: \"col-7 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(UserMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Search Friend\"), React.createElement(FlashMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Friends...\",\n      className: \"form-control\",\n      onKeyUp: this.searchFriends,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, this.state.searchUsers))), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Invitation\"), React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, this.state.inviteFriends))), React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Friends\"), React.createElement(\"div\", {\n      className: \"d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.state.friends))));\n  }\n\n}\n\nexport default FriendZone;","map":{"version":3,"sources":["D:/MY_WORK/react-routing-test/src/components/FriendZone.js"],"names":["React","UserMenu","DbHelper","Link","FlashMessage","FriendZone","Component","constructor","sendRequest","friend","checkRequest","checkFriend","_id","insert","user_id","state","user","friend_id","status","props","dispatch","type","message","searchFriends","event","users","JSON","parse","localStorage","getItem","keyword","target","value","resultData","searchUsersContent","filter","i","name","indexOf","forEach","push","setState","searchUsers","inviteFriends","requestsList","requestFriendContent","map","find","statusChangeRequest","errors","success","friends","sessionStorage","componentDidMount","getFriendList","friendId","update","setTimeout","friendContent","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport UserMenu from './UserMenu';\r\nimport {DbHelper} from '../DbHelper';\r\nimport {Link} from 'react-router-dom'\r\nimport FlashMessage from './elements/FlashMessage';\r\nclass FriendZone extends React.Component {\r\n\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        errors:'',\r\n        success:'',\r\n        searchUsers:[],\r\n        inviteFriends:[],\r\n        friends:[],\r\n        user:JSON.parse(sessionStorage.getItem(\"_u\")),\r\n      }\r\n      \r\n    }\r\n    componentDidMount() {\r\n      this.getFriendList();\r\n      this.inviteFriends();\r\n    }\r\n\r\n    checkFriend(friendId) {\r\n      let checkRequest = DbHelper.find('friend_requests',[\r\n        ['user_id', this.state.user._id],\r\n        ['friend_id',friendId]\r\n      ]);\r\n      return checkRequest;\r\n    }\r\n    sendRequest = (friend)=>{\r\n      let checkRequest =this.checkFriend(friend._id);\r\n      if (!checkRequest) {\r\n        DbHelper.insert('friend_requests',{\r\n        user_id:this.state.user._id,\r\n        friend_id:friend._id,\r\n        status:'P'\r\n      });\r\n      this.props.dispatch({\r\n        type:'SUCCESS',\r\n        message:'Request is  sent'\r\n      })\r\n      } else {\r\n        this.props.dispatch({\r\n          type:'ERROR',\r\n          message:'Request is already sent'\r\n        })\r\n      }\r\n      \r\n    }\r\n    searchFriends = (event)=>{\r\n      let users = JSON.parse(localStorage.getItem('users'));\r\n      let keyword = event.target.value;\r\n      let resultData = [];\r\n      let searchUsersContent = [];\r\n      if (keyword) {\r\n        resultData = users.filter((i)=>{\r\n          return i._id!==this.state.user._id && i.name.indexOf(keyword) > -1;\r\n        });\r\n        \r\n        resultData.forEach((i)=>{\r\n          searchUsersContent.push(\r\n            <div className=\"card\">\r\n            <div className=\"card-body d-flex\">\r\n            <div className=\"col\">{i.name}</div>\r\n            <div className=\"col text-right\"><button className=\"btn btn-primary btn-sm\" disabled={this.checkFriend(i._id)}  onClick={()=>{this.sendRequest(i)}}>Send</button></div>\r\n            </div>\r\n            </div>\r\n          )\r\n        })\r\n        \r\n      } else {\r\n        searchUsersContent = [];\r\n      }\r\n      this.setState({searchUsers:searchUsersContent});\r\n    }\r\n\r\n    statusChangeRequest(friend,status) {\r\n      DbHelper.update('friend_requests',[['_id',friend._id]],{'status':status});\r\n      if (status==='A') {\r\n        DbHelper.insert('friend_requests',{\r\n        friend_id:friend.user_id,\r\n        user_id:this.state.user._id,\r\n        status:'A'\r\n      });\r\n      }\r\n      this.setState({success:'Request is  '+((status==='A')?'accepted':'rejected')});\r\n        setTimeout(()=>{\r\n          this.setState({success:null});\r\n        },3000);\r\n      this.inviteFriends();\r\n      this.getFriendList();\r\n    }\r\n    inviteFriends = ()=>{\r\n      let requestsList = JSON.parse(localStorage.getItem('friend_requests'));\r\n      if (!requestsList) {\r\n        requestsList = [];\r\n      }\r\n      let resultData = [];\r\n      let requestFriendContent = [];\r\n        resultData = requestsList.filter((i)=>{\r\n          return i.friend_id === this.state.user._id && i.status==='P';\r\n        });\r\n        requestFriendContent = resultData.map((i)=>{\r\n          let user = DbHelper.find('users',[['_id',i.user_id]]);\r\n            return (<div className=\"card\">\r\n            <div className=\"card-body  text-center\">\r\n            <div ><Link to={'/profile/'+user._id}>{user.name}</Link> </div>\r\n            <div ><button className=\"btn btn-primary btn-sm\"   onClick={()=>{this.statusChangeRequest(i,'A')}}>Accept</button> <button className=\"btn btn-danger btn-sm\"   onClick={()=>{this.statusChangeRequest(i,'R')}}>Reject</button></div>\r\n            </div>\r\n            </div>)\r\n        })\r\n       this.setState({'inviteFriends':requestFriendContent});\r\n    }\r\n\r\n    getFriendList() {\r\n      let requestsList = JSON.parse(localStorage.getItem('friend_requests'));\r\n      if (!requestsList) {\r\n        requestsList = [];\r\n      }\r\n      let resultData = [];\r\n      let friendContent = [];\r\n        resultData = requestsList.filter((i)=>{\r\n          return i.user_id === this.state.user._id && i.status==='A';\r\n        });\r\n        friendContent = resultData.map((i)=>{\r\n          let user = DbHelper.find('users',[['_id',i.friend_id]]);\r\n            return (\r\n              <div className=\"card\">\r\n            <div className=\"card-body\">\r\n            <div className=\"col\">\r\n             <Link to={'/profile/'+user._id}>{user.name}</Link> \r\n            </div>\r\n            \r\n            </div>\r\n            </div>)\r\n        })\r\n       this.setState({'friends':friendContent});\r\n    }\r\n    render (){\r\n      return (\r\n        <React.Fragment>\r\n      <div className=\"row\">\r\n      <div className=\"col-5\">\r\n      <h4>Friend Zone</h4>\r\n      </div>\r\n      <div className=\"col-7 text-right\">\r\n      <UserMenu/>\r\n      </div>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Search Friend</h5>\r\n        <FlashMessage/>\r\n        <div className=\"form-group\">\r\n        <input type=\"text\" placeholder=\"Search Friends...\" className=\"form-control\" onKeyUp={this.searchFriends} />\r\n        </div>\r\n        <div>\r\n        {this.state.searchUsers}\r\n        </div>\r\n  \r\n        </div>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Invitation</h5>\r\n        <div className=\"d-flex\">\r\n        {this.state.inviteFriends}\r\n        </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n        <h5 className=\"card-title\">Friends</h5>\r\n        <div className=\"d-flex\">\r\n        {this.state.friends}</div>\r\n        </div>\r\n      </div>\r\n      </React.Fragment>\r\n      );\r\n    }\r\n}\r\nexport default FriendZone;"]},"metadata":{},"sourceType":"module"}