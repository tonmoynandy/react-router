{"ast":null,"code":"import _objectSpread from \"D:\\\\MY_WORK\\\\react-routing-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\MY_WORK\\\\react-routing-test\\\\src\\\\components\\\\Settings.js\";\nimport React from 'react';\nimport UserMenu from './UserMenu';\nimport { DbHelper } from '../DbHelper';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateProfileAction = () => {\n      const formData = {};\n      const errorMessages = {};\n      var formValidStatus = true;\n      const formElement = Array.from(document.profileform.elements).map(({\n        name,\n        value\n      }) => {\n        formData[name] = value;\n        let validation = this.state.profileForm.validation.rules[name];\n\n        if (validation) {\n          errorMessages[name] = {};\n\n          if (validation.indexOf('required') > -1) {\n            if (value == '') {\n              errorMessages[name]['required'] = 'field is required';\n              formValidStatus = false;\n            }\n          }\n        }\n\n        return {\n          name: name,\n          value: value\n        };\n      });\n      setTimeout(() => {\n        this.setState(prevState => _objectSpread({}, prevState, {\n          profileForm: _objectSpread({}, prevState.profileForm, {\n            validation: _objectSpread({}, prevState.profileForm.validation, {\n              messages: errorMessages,\n              valid: formValidStatus\n            }),\n            formValue: formData\n          })\n        }));\n\n        if (this.state.profileForm.validation.valid === true) {\n          let user = this.state.user;\n          user = _objectSpread({}, user, {\n            name: this.state.profileForm.formValue.name\n          });\n          DbHelper.update('users', [[\"_id\", user._id]], user);\n          sessionStorage.setItem('_u', JSON.stringify(user));\n          this.props.dispatch({\n            type: 'SET_AUTH_USER',\n            user\n          });\n          this.setState({\n            'success': 'Profile is updated successfully'\n          });\n        } else {// alert('error');\n        }\n      }, 50);\n    };\n\n    this.state = {\n      errors: '',\n      success: '',\n      user: JSON.parse(sessionStorage.getItem(\"_u\")),\n      profileForm: {\n        validation: {\n          rules: {\n            name: ['required']\n          },\n          messages: {},\n          valid: false\n        },\n        formValue: {}\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.profileform.name.value = this.state.user.name;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Settings\")), React.createElement(\"div\", {\n      className: \"col-7 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(UserMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.success && React.createElement(\"div\", {\n      class: \"alert alert-success text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.success), this.state.errors && React.createElement(\"div\", {\n      class: \"alert alert-danger text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.errors))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Profile Update\"), React.createElement(\"div\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      name: \"profileform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), this.state.profileForm.validation.messages.name && this.state.profileForm.validation.messages.name.required && React.createElement(\"p\", {\n      className: \"form-err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.profileForm.validation.messages.name.required))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      onClick: this.updateProfileAction,\n      className: \"btn btn-success\",\n      value: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })))))), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Change Password\"), React.createElement(\"div\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      name: \"passwordform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Old Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      value: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nexport default Settings;","map":{"version":3,"sources":["D:/MY_WORK/react-routing-test/src/components/Settings.js"],"names":["React","UserMenu","DbHelper","Settings","Component","constructor","props","updateProfileAction","formData","errorMessages","formValidStatus","formElement","Array","from","document","profileform","elements","map","name","value","validation","state","profileForm","rules","indexOf","setTimeout","setState","prevState","messages","valid","formValue","user","update","_id","sessionStorage","setItem","JSON","stringify","dispatch","type","errors","success","parse","getItem","componentDidMount","render","required"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport UserMenu from './UserMenu';\r\nimport { DbHelper } from '../DbHelper';\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errors: '',\r\n            success: '',\r\n            user: JSON.parse(sessionStorage.getItem(\"_u\")),\r\n            profileForm: {\r\n                validation: {\r\n                    rules: {\r\n                        name: ['required']\r\n                    },\r\n                    messages: {},\r\n                    valid: false,\r\n                },\r\n                formValue: {},\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document.profileform.name.value = this.state.user.name;\r\n    }\r\n    updateProfileAction = () => {\r\n        const formData = {};\r\n        const errorMessages = {};\r\n        var formValidStatus = true;\r\n        const formElement = Array.from(document.profileform.elements).map(({ name, value }) => {\r\n            formData[name] = value;\r\n            let validation = this.state.profileForm.validation.rules[name];\r\n            if (validation) {\r\n                errorMessages[name] = {};\r\n                if (validation.indexOf('required') > -1) {\r\n                    if (value == '') {\r\n                        errorMessages[name]['required'] = 'field is required';\r\n                        formValidStatus = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                name: name,\r\n                value: value\r\n            }\r\n        });\r\n        \r\n        setTimeout(() => {\r\n            this.setState(prevState => ({\r\n                ...prevState,\r\n                profileForm: {\r\n                    ...prevState.profileForm,\r\n                    validation: {\r\n                        ...prevState.profileForm.validation,\r\n                        messages: errorMessages,\r\n                        valid: formValidStatus,\r\n                    },\r\n                    formValue: formData\r\n                }\r\n\r\n            }));\r\n            if (this.state.profileForm.validation.valid === true) {\r\n              let user = this.state.user;\r\n              user = {\r\n                  ...user,\r\n                  name:this.state.profileForm.formValue.name\r\n              };\r\n              DbHelper.update('users',[[\"_id\",user._id]],user);\r\n              sessionStorage.setItem('_u',JSON.stringify(user));\r\n              this.props.dispatch({\r\n                type: 'SET_AUTH_USER',\r\n                user\r\n              });\r\n              this.setState({'success':'Profile is updated successfully'})\r\n            } else {\r\n                // alert('error');\r\n            }\r\n        }, 50);\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                        <h4>Settings</h4>\r\n                    </div>\r\n                    <div className=\"col-7 text-right\">\r\n                        <UserMenu />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {this.state.success &&\r\n                            <div class=\"alert alert-success text-center\">\r\n                                {this.state.success}\r\n                            </div>\r\n                        }\r\n                        {this.state.errors &&\r\n                            <div class=\"alert alert-danger text-center\">\r\n                                {this.state.errors}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h6 className=\"card-title\">Profile Update</h6>\r\n                                <div className=\"card-text\">\r\n                                    <form name=\"profileform\">\r\n                                        <div className=\"form-group\">\r\n                                            <label >Name</label>\r\n                                            <input type=\"text\" name=\"name\" className=\"form-control\" />\r\n                                            {(this.state.profileForm.validation.messages.name && this.state.profileForm.validation.messages.name.required) &&\r\n                                                <p className=\"form-err\">\r\n                                                    {this.state.profileForm.validation.messages.name.required}\r\n                                                </p>}\r\n                                        </div>\r\n                                    </form>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"button\" onClick={this.updateProfileAction} className=\"btn btn-success\" value=\"Save\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h6 className=\"card-title\">Change Password</h6>\r\n                                <div className=\"card-text\">\r\n                                    <form name=\"passwordform\">\r\n                                        <div className=\"form-group\">\r\n                                            <label >Old Password</label>\r\n                                            <input type=\"password\" className=\"form-control\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label >New Password</label>\r\n                                            <input type=\"password\" className=\"form-control\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label >Confirm Password</label>\r\n                                            <input type=\"password\" className=\"form-control\" />\r\n                                        </div>\r\n                                    </form>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"button\" className=\"btn btn-success\" value=\"Save\" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Settings;"]},"metadata":{},"sourceType":"module"}