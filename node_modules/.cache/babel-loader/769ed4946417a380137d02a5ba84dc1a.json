{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY_WORK\\\\react-routing-test\\\\src\\\\components\\\\elements\\\\Posts.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { DbHelper } from '../../DbHelper';\nimport Comments from './Comments';\nimport Moment from 'react-moment';\n\nclass Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.commentDisplay = postIndex => {\n      let commentdisplayArr = this.state.commentDisplay;\n      let index = commentdisplayArr.indexOf(postIndex);\n\n      if (index == -1) {\n        commentdisplayArr.push(postIndex);\n      } else {\n        commentdisplayArr.splice(index, 1);\n      }\n\n      this.setState({\n        commentDisplay: commentdisplayArr\n      });\n    };\n\n    this.handelCommentResponse = response => {\n      let userPosts = this.state.postList;\n      let postIndex = userPosts.findIndex(i => {\n        return i._id == response;\n      });\n      userPosts[postIndex].comments = userPosts[postIndex].comments + 1;\n      this.setState({\n        postList: userPosts\n      });\n    };\n\n    this.state = {\n      commentDisplay: [],\n      postList: []\n    };\n  }\n\n  componentDidUpdate() {\n    this.setState({\n      postList: this.props.posts\n    });\n  }\n\n  render() {\n    var userPostContent = [];\n\n    for (let x = 0; x < this.state.postList.length; x++) {\n      let post = this.props.posts[x];\n      let postedAt = new Date(post.postedAt);\n      this.props.posts[x].comments = post.comments = DbHelper.filter('comments', [['post_id', post._id]]).length;\n      let postUser = DbHelper.find('users', [['_id', post.user]]);\n      console.log(post.user);\n      userPostContent.push(React.createElement(React.Fragment, {\n        key: postedAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, post.content), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"by \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: `/profile/${postUser._id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, postUser.name)), \" \", React.createElement(Moment, {\n        fromNow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, postedAt))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"\\uD83D\\uDCAC \", React.createElement(\"a\", {\n        href: \"javascript:void(0)\",\n        onClick: () => {\n          this.commentDisplay(x);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, post.comments, \" comments\"), this.state.commentDisplay && this.state.commentDisplay.indexOf(x) > -1 && React.createElement(Comments, {\n        key: postedAt,\n        post: post,\n        sendResponse: this.handelCommentResponse,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })))))));\n    }\n\n    return userPostContent;\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["D:/MY_WORK/react-routing-test/src/components/elements/Posts.js"],"names":["React","Link","DbHelper","Comments","Moment","Posts","Component","constructor","props","commentDisplay","postIndex","commentdisplayArr","state","index","indexOf","push","splice","setState","handelCommentResponse","response","userPosts","postList","findIndex","i","_id","comments","componentDidUpdate","posts","render","userPostContent","x","length","post","postedAt","Date","filter","postUser","find","user","console","log","content","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AACA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,cAVmB,GAUDC,SAAD,IAAe;AAC5B,UAAIC,iBAAiB,GAAG,KAAKC,KAAL,CAAWH,cAAnC;AACA,UAAII,KAAK,GAAGF,iBAAiB,CAACG,OAAlB,CAA0BJ,SAA1B,CAAZ;;AACA,UAAIG,KAAK,IAAI,CAAC,CAAd,EAAiB;AACbF,QAAAA,iBAAiB,CAACI,IAAlB,CAAuBL,SAAvB;AACH,OAFD,MAEO;AACHC,QAAAA,iBAAiB,CAACK,MAAlB,CAAyBH,KAAzB,EAAgC,CAAhC;AACH;;AAED,WAAKI,QAAL,CAAc;AAAER,QAAAA,cAAc,EAAEE;AAAlB,OAAd;AACH,KApBkB;;AAAA,SAqBnBO,qBArBmB,GAqBMC,QAAD,IAAc;AAClC,UAAIC,SAAS,GAAG,KAAKR,KAAL,CAAWS,QAA3B;AACA,UAAIX,SAAS,GAAGU,SAAS,CAACE,SAAV,CAAqBC,CAAD,IAAO;AACvC,eAAOA,CAAC,CAACC,GAAF,IAASL,QAAhB;AACH,OAFe,CAAhB;AAGAC,MAAAA,SAAS,CAACV,SAAD,CAAT,CAAqBe,QAArB,GAAgCL,SAAS,CAACV,SAAD,CAAT,CAAqBe,QAArB,GAAgC,CAAhE;AACA,WAAKR,QAAL,CAAc;AAACI,QAAAA,QAAQ,EAACD;AAAV,OAAd;AACH,KA5BkB;;AAEf,SAAKR,KAAL,GAAa;AACTH,MAAAA,cAAc,EAAC,EADN;AAETY,MAAAA,QAAQ,EAAC;AAFA,KAAb;AAIH;;AACDK,EAAAA,kBAAkB,GAAG;AACjB,SAAKT,QAAL,CAAc;AAACI,MAAAA,QAAQ,EAAC,KAAKb,KAAL,CAAWmB;AAArB,KAAd;AACH;;AAoBDC,EAAAA,MAAM,GAAG;AACL,QAAIC,eAAe,GAAG,EAAtB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlB,KAAL,CAAWS,QAAX,CAAoBU,MAAxC,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,UAAIE,IAAI,GAAG,KAAKxB,KAAL,CAAWmB,KAAX,CAAiBG,CAAjB,CAAX;AACA,UAAIG,QAAQ,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACC,QAAd,CAAf;AACA,WAAKzB,KAAL,CAAWmB,KAAX,CAAiBG,CAAjB,EAAoBL,QAApB,GAA+BO,IAAI,CAACP,QAAL,GAAgBvB,QAAQ,CAACiC,MAAT,CAAgB,UAAhB,EAA2B,CAAC,CAAC,SAAD,EAAWH,IAAI,CAACR,GAAhB,CAAD,CAA3B,EAAmDO,MAAlG;AACA,UAAIK,QAAQ,GAAGlC,QAAQ,CAACmC,IAAT,CAAc,OAAd,EAAsB,CAAC,CAAC,KAAD,EAAOL,IAAI,CAACM,IAAZ,CAAD,CAAtB,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACM,IAAjB;AACAT,MAAAA,eAAe,CAACd,IAAhB,CACI,oBAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,GAAG,EAAEkB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAID,IAAI,CAACS,OAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACT,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,YAAWL,QAAQ,CAACZ,GAAI,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCY,QAAQ,CAACM,IAAhD,CADS,CAAV,OACuE,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBT,QAAjB,CADvE,CAAH,CAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACO;AAAG,QAAA,IAAI,EAAC,oBAAR;AAA6B,QAAA,OAAO,EAAE,MAAM;AAAE,eAAKxB,cAAL,CAAoBqB,CAApB;AAAwB,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyEE,IAAI,CAACP,QAA9E,cADP,EAEK,KAAKb,KAAL,CAAWH,cAAX,IAA6B,KAAKG,KAAL,CAAWH,cAAX,CAA0BK,OAA1B,CAAkCgB,CAAlC,IAAuC,CAAC,CAArE,IACG,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEG,QAAf;AAAyB,QAAA,IAAI,EAAED,IAA/B;AAAqC,QAAA,YAAY,EAAE,KAAKd,qBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,CAJJ,CADJ,CADJ,CADJ,CADJ;AAmBH;;AACD,WAAOW,eAAP;AACH;;AA3D+B;;AA8DpC,eAAexB,KAAf","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {DbHelper} from '../../DbHelper';\r\nimport Comments from './Comments';\r\nimport Moment from 'react-moment';\r\nclass Posts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            commentDisplay:[],\r\n            postList:[]\r\n        }\r\n    }\r\n    componentDidUpdate() {\r\n        this.setState({postList:this.props.posts});\r\n    }\r\n    commentDisplay = (postIndex) => {\r\n        let commentdisplayArr = this.state.commentDisplay;\r\n        let index = commentdisplayArr.indexOf(postIndex);\r\n        if (index == -1) {\r\n            commentdisplayArr.push(postIndex);\r\n        } else {\r\n            commentdisplayArr.splice(index, 1);\r\n        }\r\n\r\n        this.setState({ commentDisplay: commentdisplayArr })\r\n    }\r\n    handelCommentResponse = (response) => {\r\n        let userPosts = this.state.postList;\r\n        let postIndex = userPosts.findIndex((i) => {\r\n            return i._id == response;\r\n        })\r\n        userPosts[postIndex].comments = userPosts[postIndex].comments + 1;\r\n        this.setState({postList:userPosts});\r\n    }\r\n    render() {\r\n        var userPostContent = [];\r\n        for (let x = 0; x < this.state.postList.length; x++) {\r\n            let post = this.props.posts[x]\r\n            let postedAt = new Date(post.postedAt);\r\n            this.props.posts[x].comments = post.comments = DbHelper.filter('comments',[['post_id',post._id]]).length;\r\n            let postUser = DbHelper.find('users',[['_id',post.user]]);\r\n            console.log(post.user);\r\n            userPostContent.push(\r\n                <React.Fragment key={postedAt}>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <p>{post.content}</p>\r\n                                <p><small>by <strong>\r\n                                    <Link to={`/profile/${postUser._id}`}>{postUser.name}</Link></strong> <Moment fromNow>{postedAt}</Moment></small></p>\r\n                                <div>\r\n                                    💬 <a href=\"javascript:void(0)\" onClick={() => { this.commentDisplay(x) }}>{post.comments} comments</a>\r\n                                    {this.state.commentDisplay && this.state.commentDisplay.indexOf(x) > -1 &&\r\n                                        <Comments key={postedAt} post={post} sendResponse={this.handelCommentResponse} />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div></React.Fragment>\r\n            )\r\n\r\n        }\r\n        return userPostContent;\r\n    }\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}