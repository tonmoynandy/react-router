{"ast":null,"code":"import _objectSpread from \"D:\\\\MY_WORK\\\\react-routing-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\MY_WORK\\\\react-routing-test\\\\src\\\\components\\\\Register.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { DbHelper } from '../DbHelper';\nimport Form from './elements/Form';\n\nclass Register extends React.Component {\n  constructor() {\n    super();\n\n    this.submitHandeler = $event => {\n      $event.preventDefault();\n      const formData = {};\n      const errorMessages = {};\n      var formValidStatus = true;\n      const formElement = Array.from(document.registerform.elements).map(({\n        name,\n        value\n      }) => {\n        formData[name] = value;\n        let validation = this.state.validation.rules[name];\n\n        if (validation) {\n          errorMessages[name] = {};\n\n          if (validation.indexOf('required') > -1) {\n            if (value == '') {\n              errorMessages[name]['required'] = 'field is required';\n              formValidStatus = false;\n            }\n          }\n\n          if (value !== '' && validation.indexOf('email') > -1) {\n            if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n              errorMessages[name]['email'] = 'Email is not valid';\n              formValidStatus = false;\n            }\n          }\n\n          if (value !== '' && validation.find(i => i.startsWith('min'))) {\n            let minValue = validation.find(i => i.startsWith('min')).split(':');\n            minValue = parseInt(minValue[1]);\n\n            if (value.length < minValue) {\n              errorMessages[name]['min'] = 'minimum ' + minValue + ' character is required';\n              formValidStatus = false;\n            }\n          }\n\n          if (value !== '' && validation.find(i => i.startsWith('max'))) {\n            let maxValue = validation.find(i => i.startsWith('max')).split(':');\n            maxValue = parseInt(maxValue[1]);\n\n            if (value.length > maxValue) {\n              errorMessages[name]['max'] = 'max ' + maxValue + ' character is required';\n              formValidStatus = false;\n            }\n          }\n        }\n\n        return {\n          name: name,\n          value: value\n        };\n      });\n      setTimeout(() => {\n        this.setState(prevState => _objectSpread({}, prevState, {\n          validation: _objectSpread({}, prevState.validation, {\n            messages: errorMessages,\n            valid: formValidStatus\n          }),\n          formValue: formData\n        }));\n\n        if (this.state.validation.valid === true) {\n          DbHelper.insert('users', this.state.formValue);\n          document.registerform.reset();\n          this.setState({\n            'successMessage': 'Welcome ' + this.state.formValue.name\n          });\n        } else {// alert('error');\n        }\n      }, 50);\n    };\n\n    this.state = {\n      formConfig: {\n        name: 'regForm',\n        elements: {\n          'name': ['', ['required']],\n          'email': ['', ['required', 'email']],\n          'passsword': ['', ['required']]\n        }\n      },\n      validation: {\n        rules: {\n          name: ['required'],\n          email: ['required', 'email'],\n          password: ['required']\n        },\n        messages: {},\n        valid: false\n      },\n      formValue: {},\n      successMessage: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Sign up\"), this.state.successMessage && React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.successMessage), React.createElement(Form, {\n      config: this.state.formConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      name: \"registerform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"name\",\n      placeholder: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), this.state.validation.messages.name && this.state.validation.messages.name.required && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.validation.messages.name.required)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"email\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), this.state.validation.messages.email && this.state.validation.messages.email.required && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.validation.messages.email.required), this.state.validation.messages.email && this.state.validation.messages.email.email && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.validation.messages.email.email)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), this.state.validation.messages.password && this.state.validation.messages.password.required && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.state.validation.messages.password.required))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.submitHandeler,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      className: \"col text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Existing User?\")))))), React.createElement(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["D:/MY_WORK/react-routing-test/src/components/Register.js"],"names":["React","Link","DbHelper","Form","Register","Component","constructor","submitHandeler","$event","preventDefault","formData","errorMessages","formValidStatus","formElement","Array","from","document","registerform","elements","map","name","value","validation","state","rules","indexOf","test","find","i","startsWith","minValue","split","parseInt","length","maxValue","setTimeout","setState","prevState","messages","valid","formValue","insert","reset","formConfig","email","password","successMessage","render","required"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {DbHelper} from '../DbHelper';\r\nimport Form from './elements/Form';\r\nclass Register extends React.Component {\r\n\r\nconstructor() {\r\n  super();\r\n  this.state = {\r\n      formConfig:{\r\n        name:'regForm',\r\n        elements:{\r\n          'name':['',['required']],\r\n          'email':['',['required','email']],\r\n          'passsword':['',['required']],\r\n        }\r\n      },\r\n      validation: {\r\n        rules: {\r\n         name:['required'],\r\n         email:['required','email'],\r\n         password:['required']\r\n        },\r\n        messages:{},\r\n        valid:false,\r\n      },\r\n      formValue:{},\r\n      successMessage:''\r\n    }\r\n}\r\n\r\nsubmitHandeler = ($event)=>{\r\n  $event.preventDefault();\r\n  const formData = {};\r\n    const errorMessages = {};\r\n    var formValidStatus = true;\r\n    const formElement =  Array.from(document.registerform.elements).map(({name,value})=>{\r\n      formData[name] = value;\r\n      let validation = this.state.validation.rules[name];\r\n      if (validation) {\r\n        errorMessages[name] = {};\r\n        if (validation.indexOf('required') > -1) {\r\n          if (value == '') {\r\n           errorMessages[name]['required']='field is required';\r\n           formValidStatus = false;\r\n          }\r\n        }\r\n        if (value !== '' && validation.indexOf('email') > -1) {\r\n         if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/).test(value)) {\r\n          errorMessages[name]['email']='Email is not valid';\r\n          formValidStatus = false;\r\n         }\r\n        }\r\n        if (value !== '' && validation.find((i)=> i.startsWith('min'))) {\r\n           let minValue = validation.find((i)=> i.startsWith('min')).split(':');\r\n           minValue = parseInt(minValue[1]);\r\n           if (value.length < minValue) {\r\n             errorMessages[name]['min']='minimum '+minValue+' character is required';\r\n             formValidStatus = false;\r\n           }\r\n        }\r\n        if (value !== '' && validation.find((i)=> i.startsWith('max'))) {\r\n           let maxValue = validation.find((i)=> i.startsWith('max')).split(':');\r\n           maxValue = parseInt(maxValue[1]);\r\n           if (value.length > maxValue) {\r\n             errorMessages[name]['max']='max '+maxValue+' character is required';\r\n             formValidStatus = false;\r\n           }\r\n        }\r\n      }\r\n      \r\n      return {\r\n        name:name,\r\n        value:value\r\n      }\r\n    });\r\n    setTimeout(()=>{\r\n      this.setState(prevState=>({\r\n            ...prevState,\r\n            validation:{\r\n              ...prevState.validation,\r\n              messages:errorMessages,\r\n              valid:formValidStatus,\r\n            },\r\n            formValue:formData\r\n          }));\r\n    if ( this.state.validation.valid === true) {\r\n       DbHelper.insert('users',this.state.formValue);\r\n       document.registerform.reset();\r\n       this.setState({'successMessage':'Welcome '+ this.state.formValue.name})\r\n    } else {\r\n      // alert('error');\r\n    }\r\n    },50);\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"row\">\r\n    <div className=\"col-2\"></div>\r\n    <div className=\"col-8\">\r\n    <div className=\"card\">\r\n    <div className=\"card-body\">\r\n          <h5 className=\"text-center\">Sign up</h5>\r\n          {this.state.successMessage &&\r\n          <div className=\"alert alert-success\" >\r\n          {this.state.successMessage}\r\n          </div>\r\n          }\r\n          <Form config={this.state.formConfig} />\r\n          <form name=\"registerform\">\r\n          <div className=\"form-group\">\r\n          <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Name\" />\r\n          {(this.state.validation.messages.name && this.state.validation.messages.name.required) &&  \r\n<p>\r\n{this.state.validation.messages.name.required}\r\n</p>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n          <input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" />\r\n          {(this.state.validation.messages.email && this.state.validation.messages.email.required) &&  \r\n<p>\r\n{this.state.validation.messages.email.required}\r\n</p>}\r\n{(this.state.validation.messages.email && this.state.validation.messages.email.email) &&  \r\n<p>\r\n{this.state.validation.messages.email.email}\r\n</p>\r\n}\r\n          </div>\r\n          <div className=\"form-group\">\r\n          <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\" />\r\n          {(this.state.validation.messages.password && this.state.validation.messages.password.required) &&  \r\n<p>\r\n{this.state.validation.messages.password.required}\r\n</p>}\r\n          </div>\r\n          \r\n          </form>\r\n          <div className=\"row\">\r\n          <div className=\"col\">\r\n          <button  onClick={this.submitHandeler} className=\"btn btn-primary\" >Submit</button>\r\n          </div>\r\n          <div className=\"col text-right\">\r\n          <Link to={'/'} >Existing User?</Link>\r\n          </div>\r\n          </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div className=\"col-2\"></div>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}