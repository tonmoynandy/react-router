{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY_WORK\\\\react-routing-test\\\\src\\\\components\\\\home.js\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { DbHelper } from '../DbHelper';\nimport { connect } from 'react-redux';\n\nclass Home extends Component {\n  constructor() {\n    this.state = {\n      validation: {\n        rules: {\n          email: ['required', 'email'],\n          password: ['required', 'min:6', 'max:6']\n        },\n        messages: {},\n        valid: false\n      },\n      formValue: {},\n      errors: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" \"), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.errors), React.createElement(\"form\", {\n      name: \"loginform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"email\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), this.state.validation.messages.email && this.state.validation.messages.email.required && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.validation.messages.email.required), this.state.validation.messages.email && this.state.validation.messages.email.email && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, this.state.validation.messages.email.email)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), this.state.validation.messages.password && this.state.validation.messages.password.required && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, this.state.validation.messages.password.required), this.state.validation.messages.password && this.state.validation.messages.password.min && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.state.validation.messages.password.min), this.state.validation.messages.password && this.state.validation.messages.password.max && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.state.validation.messages.password.max)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"remember_me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), \" remember me\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      value: \"Login\",\n      onClick: this.loginHandeler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/register',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"New User?\")))))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \" \"));\n  }\n\n}\n\nexport default connect()(Home);","map":{"version":3,"sources":["D:/MY_WORK/react-routing-test/src/components/home.js"],"names":["React","Component","Form","Button","Link","DbHelper","connect","Home","constructor","state","validation","rules","email","password","messages","valid","formValue","errors","render","required","min","max","loginHandeler"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Form, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {DbHelper} from '../DbHelper';\r\nimport {connect} from 'react-redux';\r\nclass Home extends  Component {\r\n  constructor() {\r\n    this.state = {\r\n      \r\n      validation: {\r\n        rules: {\r\n         email:['required','email'],\r\n         password:['required','min:6', 'max:6']\r\n        },\r\n        messages:{},\r\n        valid:false,\r\n      },\r\n      formValue:{},\r\n      errors:''\r\n    }\r\n  }\r\n  loginHandeler = ()=>{\r\n    const formData = {};\r\n    const errorMessages = {};\r\n    var formValidStatus = true;\r\n    const formElement =  Array.from(document.loginform.elements).map(({name,value})=>{\r\n      formData[name] = value;\r\n      let validation = this.state.validation.rules[name];\r\n      if (validation) {\r\n        errorMessages[name] = {};\r\n        if (validation.indexOf('required') > -1) {\r\n          if (value == '') {\r\n           errorMessages[name]['required']='field is required';\r\n           formValidStatus = false;\r\n          }\r\n        }\r\n        if (value !== '' && validation.indexOf('email') > -1) {\r\n         if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/).test(value)) {\r\n          errorMessages[name]['email']='Email is not valid';\r\n          formValidStatus = false;\r\n         }\r\n        }\r\n        if (value !== '' && validation.find((i)=> i.startsWith('min'))) {\r\n           let minValue = validation.find((i)=> i.startsWith('min')).split(':');\r\n           minValue = parseInt(minValue[1]);\r\n           if (value.length < minValue) {\r\n             errorMessages[name]['min']='minimum '+minValue+' character is required';\r\n             formValidStatus = false;\r\n           }\r\n        }\r\n        if (value !== '' && validation.find((i)=> i.startsWith('max'))) {\r\n           let maxValue = validation.find((i)=> i.startsWith('max')).split(':');\r\n           maxValue = parseInt(maxValue[1]);\r\n           if (value.length > maxValue) {\r\n             errorMessages[name]['max']='max '+minValue+' character is required';\r\n             formValidStatus = false;\r\n           }\r\n        }\r\n      }\r\n      \r\n      return {\r\n        name:name,\r\n        value:value\r\n      }\r\n    });\r\n    \r\n    setTimeout(()=>{\r\n      this.setState(prevState=>({\r\n            ...prevState,\r\n            validation:{\r\n              ...prevState.validation,\r\n              messages:errorMessages,\r\n              valid:formValidStatus,\r\n            },\r\n            formValue:formData\r\n          }));\r\n    if ( this.state.validation.valid === true) {\r\n      let userData = DbHelper.find('users',[\r\n        ['email', this.state.formValue.email],\r\n        ['password', this.state.formValue.password],\r\n      ]);\r\n\r\n      if (userData) {\r\n        userData = JSON.stringify(userData);\r\n        \r\n        this.props.dispatch({\r\n          type: 'SET_AUTH_USER',\r\n          userData\r\n        })\r\n        sessionStorage.setItem('_u', userData);\r\n        this.props.history.push('/dashboard');\r\n      } else {\r\nthis.setState({'errors':'Login failed: credentials mismatch'});\r\n      }\r\n      \r\n    }\r\n    },50);\r\n  }\r\n  render() {\r\nreturn (\r\n\r\n<div className=\"row\">\r\n<div className=\"col-md-2\"> </div>\r\n<div className=\"col-md-8\">\r\n  <div className=\"card\">\r\n  <div className=\"card-body\">\r\n  {this.state.errors &&\r\n          <div className=\"alert alert-danger\" >\r\n          {this.state.errors}\r\n          </div>\r\n          }\r\n  <form name=\"loginform\">\r\n<div className=\"form-group\">\r\n<input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" />\r\n{(this.state.validation.messages.email && this.state.validation.messages.email.required) &&  \r\n<p>\r\n{this.state.validation.messages.email.required}\r\n</p>\r\n}\r\n{(this.state.validation.messages.email && this.state.validation.messages.email.email) &&  \r\n<p>\r\n{this.state.validation.messages.email.email}\r\n</p>\r\n}\r\n</div>  \r\n<div className=\"form-group\">\r\n<input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\"/>\r\n{(this.state.validation.messages.password && this.state.validation.messages.password.required) &&  \r\n<p>\r\n{this.state.validation.messages.password.required}\r\n</p>\r\n}\r\n{(this.state.validation.messages.password && this.state.validation.messages.password.min) &&  \r\n<p>\r\n{this.state.validation.messages.password.min}\r\n</p>\r\n}\r\n{(this.state.validation.messages.password && this.state.validation.messages.password.max) &&  \r\n<p>\r\n{this.state.validation.messages.password.max}\r\n</p>\r\n}\r\n</div> \r\n<div className=\"form-group\">\r\n<input type=\"checkbox\" name=\"remember_me\"/> remember me\r\n</div> \r\n</form>\r\n<div className=\"row\">\r\n          <div className=\"col\">\r\n         <input type=\"button\" className=\"btn btn-primary\" value=\"Login\" onClick={this.loginHandeler} />\r\n          </div>\r\n          <div className=\"col text-right\">\r\n        <Link to={'/register'}>New User?</Link>\r\n          </div>\r\n          </div>\r\n  \r\n</div>\r\n</div>\r\n</div>\r\n<div className=\"col-md-2\"> </div>\r\n</div>\r\n);\r\n  }\r\n}\r\nexport default connect()(Home);"]},"metadata":{},"sourceType":"module"}