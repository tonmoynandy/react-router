{"ast":null,"code":"var _jsxFileName = \"D:\\\\MY_WORK\\\\react-routing-test\\\\src\\\\components\\\\elements\\\\Comments.js\";\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { DbHelper } from '../../DbHelper';\nimport Moment from 'react-moment';\n\nclass Comments extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.postComment = () => {\n      if (this.comment.current.value) {\n        DbHelper.insert('comments', {\n          post_id: this.props.post._id,\n          user_id: this.state.user._id,\n          comment: this.comment.current.value,\n          postedAt: new Date().getTime()\n        });\n        this.comment.current.value = '';\n        this.getCommentList();\n        this.props.sendResponse(this.props.post._id);\n      }\n    };\n\n    this.comment = React.createRef();\n    this.state = {\n      commentsList: [],\n      user: JSON.parse(sessionStorage.getItem(\"_u\"))\n    };\n  }\n\n  componentDidMount() {\n    this.getCommentList();\n  }\n\n  getCommentList() {\n    let postComments = DbHelper.filter('comments', [['post_id', this.props.post._id]]).map(i => {\n      let user = DbHelper.find('users', [['_id', i.user_id]]);\n      return React.createElement(\"div\", {\n        key: i.posteddAt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, i.comment, \" - \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, user.name), \" \", React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        fromNow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, i.posteddAt)));\n    });\n    this.setState({\n      commentsList: postComments\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"comment-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.commentsList), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Type comment...\",\n      ref: this.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"input-group-text\",\n      onClick: this.postComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Send\")))))));\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["D:/MY_WORK/react-routing-test/src/components/elements/Comments.js"],"names":["React","Link","Redirect","DbHelper","Moment","Comments","Component","constructor","props","postComment","comment","current","value","insert","post_id","post","_id","user_id","state","user","postedAt","Date","getTime","getCommentList","sendResponse","createRef","commentsList","JSON","parse","sessionStorage","getItem","componentDidMount","postComments","filter","map","i","find","posteddAt","name","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link , Redirect } from 'react-router-dom';\r\nimport {DbHelper} from '../../DbHelper';\r\nimport Moment from 'react-moment';\r\nclass Comments extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.comment = React.createRef();\r\n    this.state = {\r\n      commentsList:[],\r\n      user:JSON.parse(sessionStorage.getItem(\"_u\")),\r\n    }\r\n  }\r\n\r\ncomponentDidMount() {\r\n  \r\n  this.getCommentList();\r\n}\r\npostComment = ()=> {\r\n  if (this.comment.current.value) {\r\n    DbHelper.insert('comments',{\r\n        post_id:this.props.post._id,\r\n        user_id:this.state.user._id,\r\n        comment:this.comment.current.value,\r\n        postedAt: new Date().getTime()\r\n    });\r\n    this.comment.current.value = '';\r\n    this.getCommentList();\r\n    this.props.sendResponse(this.props.post._id)\r\n  }\r\n  \r\n}\r\ngetCommentList() {\r\n  let postComments = DbHelper.filter('comments',[\r\n    ['post_id',this.props.post._id]\r\n  ]).map((i)=>{\r\n    let user = DbHelper.find('users',[['_id',i.user_id]]);\r\n    return (\r\n      <div key={i.posteddAt}>\r\n      {i.comment} - <strong>{user.name}</strong> <i><Moment fromNow>{ i.posteddAt }</Moment></i>\r\n      </div>\r\n    );\r\n  });\r\n  this.setState({commentsList:postComments});\r\n}\r\nrender(){\r\n  \r\n  return (\r\n    <div className=\"comment-container\">\r\n    <div className=\"card\">\r\n    <div className=\"card-body\">\r\n    <div>\r\n    {this.state.commentsList}\r\n    </div>\r\n    <div>\r\n    <div className=\"input-group\">\r\n    <input type=\"text\" className=\"form-control\" placeholder=\"Type comment...\" ref={this.comment}/>  \r\n    <div className=\"input-group-append\">\r\n        <button className=\"input-group-text\" onClick={this.postComment}>Send</button>\r\n      </div>  \r\n    </div>    \r\n    </div>\r\n    </div>\r\n    </div>\r\n   \r\n    </div>\r\n  );\r\n\r\n}\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}