{"ast":null,"code":"import _objectSpread from \"D:\\\\MY_WORK\\\\react-routing-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\MY_WORK\\\\react-routing-test\\\\src\\\\components\\\\Settings.js\";\nimport React from 'react';\nimport UserMenu from './UserMenu';\nimport { DbHelper } from '../DbHelper';\nimport { connect } from 'react-redux';\nimport Form from './elements/Form';\nimport FlashMessage from './elements/FlashMessage';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateProfileAction = e => {\n      if (e.valid === true) {\n        let userData = this.state.user;\n        userData = _objectSpread({}, userData, {\n          name: e.formValue.name\n        });\n        DbHelper.update('users', [[\"_id\", userData._id]], userData);\n        this.props.dispatch({\n          type: 'SET_AUTH_USER',\n          userData\n        });\n        let message = {\n          success: 'Profile is updated successfully'\n        };\n        this.props.dispatch({\n          type: 'SUCCESS',\n          message\n        }); // this.setState({ 'success': 'Profile is updated successfully' })\n      } else {// alert('error');\n        }\n    };\n\n    this.changePasswordAction = e => {\n      if (e.valid === true) {\n        if (e.formValue.old_password !== this.state.user.password) {\n          e.form.reset();\n          this.setState({\n            'errors': 'Old password is not matching'\n          });\n        } else {\n          let userData = this.state.user;\n          userData = _objectSpread({}, userData, {\n            password: e.formValue.new_password\n          });\n          DbHelper.update('users', [[\"_id\", userData._id]], userData);\n          this.props.dispatch({\n            type: 'SET_AUTH_USER',\n            userData\n          });\n          this.setState({\n            'success': 'Password is updated successfully'\n          });\n          this.setState({\n            'errors': null\n          });\n          e.form.reset();\n        }\n      }\n    };\n\n    this.state = {\n      errors: '',\n      success: '',\n      user: JSON.parse(sessionStorage.getItem(\"_u\")),\n      profileFormConfig: {\n        name: 'profileform',\n        elements: {\n          'name': {\n            type: 'text',\n            value: '',\n            validation: ['required']\n          }\n        },\n        buttons: [{\n          type: 'submit',\n          value: 'Save',\n          cssClass: 'btn btn-success'\n        }]\n      },\n      changePasswordFormConfig: {\n        name: 'changepasswordform',\n        elements: {\n          'old_password': {\n            type: 'password',\n            validation: ['required']\n          },\n          'new_password': {\n            type: 'password',\n            validation: ['required']\n          },\n          'confirm_password': {\n            type: 'password',\n            validation: ['required', 'match_to:new_password']\n          }\n        },\n        buttons: [{\n          type: 'submit',\n          value: 'Change',\n          cssClass: 'btn btn-success'\n        }]\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.profileform.name.value = this.state.user.name;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Settings\")), React.createElement(\"div\", {\n      className: \"col-7 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(UserMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(FlashMessage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Profile Update\"), React.createElement(\"div\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Form, {\n      config: this.state.profileFormConfig,\n      onSubmit: this.updateProfileAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Change Password\"), React.createElement(\"div\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Form, {\n      config: this.state.changePasswordFormConfig,\n      onSubmit: this.changePasswordAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default connect()(Settings);","map":{"version":3,"sources":["D:/MY_WORK/react-routing-test/src/components/Settings.js"],"names":["React","UserMenu","DbHelper","connect","Form","FlashMessage","Settings","Component","constructor","props","updateProfileAction","e","valid","userData","state","user","name","formValue","update","_id","dispatch","type","message","success","changePasswordAction","old_password","password","form","reset","setState","new_password","errors","JSON","parse","sessionStorage","getItem","profileFormConfig","elements","value","validation","buttons","cssClass","changePasswordFormConfig","componentDidMount","document","profileform","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport UserMenu from './UserMenu';\r\nimport { DbHelper } from '../DbHelper';\r\nimport { connect } from 'react-redux';\r\nimport Form from './elements/Form';\r\nimport FlashMessage from './elements/FlashMessage';\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            errors: '',\r\n            success: '',\r\n            user: JSON.parse(sessionStorage.getItem(\"_u\")),\r\n            profileFormConfig: {\r\n                name: 'profileform',\r\n                elements: {\r\n                    'name': {\r\n                        type: 'text',\r\n                        value: '',\r\n                        validation: ['required']\r\n                    }\r\n                },\r\n                buttons: [\r\n                    {\r\n                        type: 'submit',\r\n                        value: 'Save',\r\n                        cssClass: 'btn btn-success'\r\n                    }\r\n                ]\r\n            },\r\n            changePasswordFormConfig: {\r\n                name: 'changepasswordform',\r\n                elements: {\r\n                    'old_password': {\r\n                        type: 'password',\r\n                        validation: ['required']\r\n                    },\r\n                    'new_password': {\r\n                        type: 'password',\r\n                        validation: ['required']\r\n                    },\r\n                    'confirm_password': {\r\n                        type: 'password',\r\n                        validation: ['required', 'match_to:new_password']\r\n                    },\r\n                },\r\n                buttons: [\r\n                    {\r\n                        type: 'submit',\r\n                        value: 'Change',\r\n                        cssClass: 'btn btn-success'\r\n                    }\r\n                ]\r\n            },\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        document.profileform.name.value = this.state.user.name;\r\n    }\r\n    updateProfileAction = (e) => {\r\n        if (e.valid === true) {\r\n            let userData = this.state.user;\r\n            userData = {\r\n                ...userData,\r\n                name: e.formValue.name\r\n            };\r\n            DbHelper.update('users', [[\"_id\", userData._id]], userData);\r\n            this.props.dispatch({\r\n                type: 'SET_AUTH_USER',\r\n                userData\r\n            });\r\n            let message = {\r\n                success: 'Profile is updated successfully' \r\n            }\r\n            this.props.dispatch({\r\n                type:'SUCCESS',\r\n                message\r\n            })\r\n            // this.setState({ 'success': 'Profile is updated successfully' })\r\n        } else {\r\n            // alert('error');\r\n        }\r\n    }\r\n    changePasswordAction = (e) => {\r\n        if (e.valid === true) {\r\n            if (e.formValue.old_password !== this.state.user.password) {\r\n                e.form.reset();\r\n                this.setState({ 'errors': 'Old password is not matching' })\r\n            } else {\r\n                let userData = this.state.user;\r\n                userData = {\r\n                    ...userData,\r\n                    password: e.formValue.new_password\r\n                };\r\n                DbHelper.update('users', [[\"_id\", userData._id]], userData);\r\n                this.props.dispatch({\r\n                    type: 'SET_AUTH_USER',\r\n                    userData\r\n                });\r\n                this.setState({ 'success': 'Password is updated successfully' })\r\n                this.setState({ 'errors': null });\r\n                e.form.reset();\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-5\">\r\n                        <h4>Settings</h4>\r\n                    </div>\r\n                    <div className=\"col-7 text-right\">\r\n                        <UserMenu />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <FlashMessage />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h6 className=\"card-title\">Profile Update</h6>\r\n                                <div className=\"card-text\">\r\n                                    <Form config={this.state.profileFormConfig} onSubmit={this.updateProfileAction} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h6 className=\"card-title\">Change Password</h6>\r\n                                <div className=\"card-text\">\r\n                                    <Form config={this.state.changePasswordFormConfig} onSubmit={this.changePasswordAction} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default connect()(Settings);"]},"metadata":{},"sourceType":"module"}