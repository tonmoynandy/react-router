{"ast":null,"code":"import _objectSpread from \"D:\\\\MY_WORK\\\\react-routing-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nexport const DbHelper = {\n  insert: (indexName, object) => {\n    let indexData = localStorage.getItem(indexName);\n\n    if (indexData) {\n      indexData = JSON.parse(localStorage.getItem(indexName));\n    } else {\n      indexData = [];\n    }\n\n    indexData.push(_objectSpread({}, object, {\n      _id: indexData.length + 1\n    }));\n    indexData = JSON.stringify(indexData);\n    localStorage.setItem(indexName, indexData);\n    return true;\n  },\n  all: indexName => {\n    let indexData = localStorage.getItem(indexName);\n\n    if (indexData) {\n      indexData = JSON.parse(localStorage.getItem(indexName));\n    }\n\n    return indexData;\n  },\n  find: (indexName, filterObj) => {\n    let indexData = localStorage.getItem(indexName);\n\n    if (indexData) {\n      indexData = JSON.parse(localStorage.getItem(indexName));\n    }\n\n    if (indexData) {\n      return indexData.find(i => {\n        let result = true;\n\n        for (let index = 0; index < filterObj.length; index++) {\n          let filterItem = filterObj[index];\n\n          if (i[filterItem[0]] !== filterItem[1]) {\n            result = false;\n          }\n        }\n\n        return result;\n      });\n    } else {\n      return null;\n    }\n  },\n  filter: (indexName, filterObj = []) => {\n    let indexData = localStorage.getItem(indexName);\n\n    if (indexData) {\n      indexData = JSON.parse(localStorage.getItem(indexName));\n    }\n\n    if (indexData) {\n      return indexData.filter(i => {\n        let result = true;\n\n        for (let index = 0; index < filterObj.length; index++) {\n          let filterItem = filterObj[index];\n\n          if (i[filterItem[0]] !== filterItem[1]) {\n            result = false;\n          }\n        }\n\n        return result;\n      });\n    } else {\n      return [];\n    }\n  },\n  update: (indexName, where, updateObj = null) => {\n    let result = DbHelper.find(indexName, where);\n    let allRecord = DbHelper.all(indexName);\n\n    if (result) {\n      let updateRow = allRecord.findIndex(i => i._id === result._id);\n      updateObj = Object.assign({}, result, updateObj);\n      allRecord[updateRow] = updateObj;\n      localStorage.setItem(indexName, JSON.stringify(allRecord));\n    }\n  }\n};","map":{"version":3,"sources":["D:/MY_WORK/react-routing-test/src/DbHelper.js"],"names":["DbHelper","insert","indexName","object","indexData","localStorage","getItem","JSON","parse","push","_id","length","stringify","setItem","all","find","filterObj","i","result","index","filterItem","filter","update","where","updateObj","allRecord","updateRow","findIndex","Object","assign"],"mappings":"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","sourcesContent":["\r\nexport  const DbHelper = {\r\n\r\n  insert : (indexName,object)=>{\r\n    let indexData = localStorage.getItem(indexName);\r\n    if (indexData) {\r\n      indexData = JSON.parse(localStorage.getItem(indexName));\r\n    } else {\r\n      indexData = [];\r\n    }\r\n    indexData.push({\r\n      ...object,\r\n      _id:indexData.length+1\r\n    });\r\n    indexData = JSON.stringify(indexData)\r\n    localStorage.setItem(indexName,indexData);\r\n    return true;\r\n  },\r\n  all:(indexName)=>{\r\n    let indexData = localStorage.getItem(indexName);\r\n    if (indexData) {\r\n      indexData = JSON.parse(localStorage.getItem(indexName));\r\n    }\r\n    return indexData;\r\n  },\r\n  find: (indexName,filterObj)=>{\r\n    let indexData = localStorage.getItem(indexName);\r\n    if (indexData) {\r\n      indexData = JSON.parse(localStorage.getItem(indexName));\r\n    }\r\n    if (indexData) {\r\n       return indexData.find((i)=>{\r\n          let result=true;\r\n          for (let index=0; index<filterObj.length; index++) {\r\n            let filterItem = filterObj[index];\r\n            if (i[filterItem[0]] !== filterItem[1]) {\r\n              result =  false;\r\n            }\r\n             \r\n          }\r\n         \r\n          return result;\r\n        });\r\n    } else {\r\n      return null;\r\n    }\r\n   \r\n  },\r\n  filter: (indexName,filterObj=[])=>{\r\n    let indexData = localStorage.getItem(indexName);\r\n    if (indexData) {\r\n      indexData = JSON.parse(localStorage.getItem(indexName));\r\n    }\r\n    if (indexData) {\r\n    return indexData.filter((i)=>{\r\n      let result=true;\r\n      for (let index=0; index<filterObj.length; index++) {\r\n        let filterItem = filterObj[index];\r\n  if (i[filterItem[0]] !== filterItem[1]) {\r\n    result =  false;\r\n  }\r\n      }\r\n      return result;\r\n  \r\n    });\r\n    } else { \r\n      return [];\r\n    }\r\n  },\r\n\r\n  update: (indexName,where,updateObj=null)=>{\r\n    let result = DbHelper.find(indexName, where);\r\n    let allRecord = DbHelper.all(indexName);\r\n    if (result) {\r\n      let updateRow = allRecord.findIndex((i)=> i._id=== result._id);\r\n      updateObj = Object.assign({},result,updateObj);\r\n      allRecord[updateRow] = updateObj;\r\n      localStorage.setItem(indexName,JSON.stringify(allRecord));\r\n    }\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}