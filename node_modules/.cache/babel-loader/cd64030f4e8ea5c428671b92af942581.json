{"ast":null,"code":"import _objectSpread from \"D:\\\\MY_WORK\\\\react-routing-test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\MY_WORK\\\\react-routing-test\\\\src\\\\components\\\\home.js\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { DbHelper } from '../DbHelper';\nimport { connect } from 'react-redux';\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.loginHandeler = () => {\n      const formData = {};\n      const errorMessages = {};\n      var formValidStatus = true;\n      const formElement = Array.from(document.loginform.elements).map(({\n        name,\n        value\n      }) => {\n        formData[name] = value;\n        let validation = this.state.validation.rules[name];\n\n        if (validation) {\n          errorMessages[name] = {};\n\n          if (validation.indexOf('required') > -1) {\n            if (value == '') {\n              errorMessages[name]['required'] = 'field is required';\n              formValidStatus = false;\n            }\n          }\n\n          if (value !== '' && validation.indexOf('email') > -1) {\n            if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(value)) {\n              errorMessages[name]['email'] = 'Email is not valid';\n              formValidStatus = false;\n            }\n          }\n\n          if (value !== '' && validation.find(i => i.startsWith('min'))) {\n            let minValue = validation.find(i => i.startsWith('min')).split(':');\n            minValue = parseInt(minValue[1]);\n\n            if (value.length < minValue) {\n              errorMessages[name]['min'] = 'minimum ' + minValue + ' character is required';\n              formValidStatus = false;\n            }\n          }\n\n          if (value !== '' && validation.find(i => i.startsWith('max'))) {\n            let maxValue = validation.find(i => i.startsWith('max')).split(':');\n            maxValue = parseInt(maxValue[1]);\n\n            if (value.length > maxValue) {\n              errorMessages[name]['max'] = 'max ' + maxValue + ' character is required';\n              formValidStatus = false;\n            }\n          }\n        }\n\n        return {\n          name: name,\n          value: value\n        };\n      });\n      setTimeout(() => {\n        this.setState(prevState => _objectSpread({}, prevState, {\n          validation: _objectSpread({}, prevState.validation, {\n            messages: errorMessages,\n            valid: formValidStatus\n          }),\n          formValue: formData\n        }));\n\n        if (this.state.validation.valid === true) {\n          let userData = DbHelper.find('users', [['email', this.state.formValue.email], ['password', this.state.formValue.password]]);\n\n          if (userData) {\n            this.props.dispatch({\n              type: 'SET_AUTH_USER',\n              userData\n            });\n            this.props.history.push('/dashboard');\n          } else {\n            this.setState({\n              'errors': 'Login failed: credentials mismatch'\n            });\n          }\n        }\n      }, 50);\n    };\n\n    this.state = {\n      validation: {\n        rules: {\n          email: ['required', 'email'],\n          password: ['required', 'min:6', 'max:6']\n        },\n        messages: {},\n        valid: false\n      },\n      formValue: {},\n      errors: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" \"), React.createElement(\"div\", {\n      className: \"col-md-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.errors && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.errors), React.createElement(\"form\", {\n      name: \"loginform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"email\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), this.state.validation.messages.email && this.state.validation.messages.email.required && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.state.validation.messages.email.required), this.state.validation.messages.email && this.state.validation.messages.email.email && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.validation.messages.email.email)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), this.state.validation.messages.password && this.state.validation.messages.password.required && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.validation.messages.password.required), this.state.validation.messages.password && this.state.validation.messages.password.min && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.validation.messages.password.min), this.state.validation.messages.password && this.state.validation.messages.password.max && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.validation.messages.password.max)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"remember_me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), \" remember me\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      value: \"Login\",\n      onClick: this.loginHandeler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: '/register',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"New User?\")))))), React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \" \"));\n  }\n\n}\n\nexport default connect()(Home);","map":{"version":3,"sources":["D:/MY_WORK/react-routing-test/src/components/home.js"],"names":["React","Component","Form","Button","Link","DbHelper","connect","Home","constructor","loginHandeler","formData","errorMessages","formValidStatus","formElement","Array","from","document","loginform","elements","map","name","value","validation","state","rules","indexOf","test","find","i","startsWith","minValue","split","parseInt","length","maxValue","setTimeout","setState","prevState","messages","valid","formValue","userData","email","password","props","dispatch","type","history","push","errors","render","required","min","max"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Form, Button } from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {DbHelper} from '../DbHelper';\r\nimport {connect} from 'react-redux';\r\nclass Home extends  Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      \r\n      validation: {\r\n        rules: {\r\n         email:['required','email'],\r\n         password:['required','min:6', 'max:6']\r\n        },\r\n        messages:{},\r\n        valid:false,\r\n      },\r\n      formValue:{},\r\n      errors:''\r\n    }\r\n  }\r\n  loginHandeler = ()=>{\r\n    const formData = {};\r\n    const errorMessages = {};\r\n    var formValidStatus = true;\r\n    const formElement =  Array.from(document.loginform.elements).map(({name,value})=>{\r\n      formData[name] = value;\r\n      let validation = this.state.validation.rules[name];\r\n      if (validation) {\r\n        errorMessages[name] = {};\r\n        if (validation.indexOf('required') > -1) {\r\n          if (value == '') {\r\n           errorMessages[name]['required']='field is required';\r\n           formValidStatus = false;\r\n          }\r\n        }\r\n        if (value !== '' && validation.indexOf('email') > -1) {\r\n         if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/).test(value)) {\r\n          errorMessages[name]['email']='Email is not valid';\r\n          formValidStatus = false;\r\n         }\r\n        }\r\n        if (value !== '' && validation.find((i)=> i.startsWith('min'))) {\r\n           let minValue = validation.find((i)=> i.startsWith('min')).split(':');\r\n           minValue = parseInt(minValue[1]);\r\n           if (value.length < minValue) {\r\n             errorMessages[name]['min']='minimum '+minValue+' character is required';\r\n             formValidStatus = false;\r\n           }\r\n        }\r\n        if (value !== '' && validation.find((i)=> i.startsWith('max'))) {\r\n           let maxValue = validation.find((i)=> i.startsWith('max')).split(':');\r\n           maxValue = parseInt(maxValue[1]);\r\n           if (value.length > maxValue) {\r\n             errorMessages[name]['max']='max '+maxValue+' character is required';\r\n             formValidStatus = false;\r\n           }\r\n        }\r\n      }\r\n      \r\n      return {\r\n        name:name,\r\n        value:value\r\n      }\r\n    });\r\n    \r\n    setTimeout(()=>{\r\n      this.setState(prevState=>({\r\n            ...prevState,\r\n            validation:{\r\n              ...prevState.validation,\r\n              messages:errorMessages,\r\n              valid:formValidStatus,\r\n            },\r\n            formValue:formData\r\n          }));\r\n    if ( this.state.validation.valid === true) {\r\n      let userData = DbHelper.find('users',[\r\n        ['email', this.state.formValue.email],\r\n        ['password', this.state.formValue.password],\r\n      ]);\r\n\r\n      if (userData) {\r\n        \r\n        this.props.dispatch({\r\n          type: 'SET_AUTH_USER',\r\n          userData\r\n        });\r\n        this.props.history.push('/dashboard');\r\n      } else {\r\nthis.setState({'errors':'Login failed: credentials mismatch'});\r\n      }\r\n      \r\n    }\r\n    },50);\r\n  }\r\n  render() {\r\nreturn (\r\n\r\n<div className=\"row\">\r\n<div className=\"col-md-2\"> </div>\r\n<div className=\"col-md-8\">\r\n  <div className=\"card\">\r\n  <div className=\"card-body\">\r\n  {this.state.errors &&\r\n          <div className=\"alert alert-danger\" >\r\n          {this.state.errors}\r\n          </div>\r\n          }\r\n  <form name=\"loginform\">\r\n<div className=\"form-group\">\r\n<input type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"Email\" />\r\n{(this.state.validation.messages.email && this.state.validation.messages.email.required) &&  \r\n<p>\r\n{this.state.validation.messages.email.required}\r\n</p>\r\n}\r\n{(this.state.validation.messages.email && this.state.validation.messages.email.email) &&  \r\n<p>\r\n{this.state.validation.messages.email.email}\r\n</p>\r\n}\r\n</div>  \r\n<div className=\"form-group\">\r\n<input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\"/>\r\n{(this.state.validation.messages.password && this.state.validation.messages.password.required) &&  \r\n<p>\r\n{this.state.validation.messages.password.required}\r\n</p>\r\n}\r\n{(this.state.validation.messages.password && this.state.validation.messages.password.min) &&  \r\n<p>\r\n{this.state.validation.messages.password.min}\r\n</p>\r\n}\r\n{(this.state.validation.messages.password && this.state.validation.messages.password.max) &&  \r\n<p>\r\n{this.state.validation.messages.password.max}\r\n</p>\r\n}\r\n</div> \r\n<div className=\"form-group\">\r\n<input type=\"checkbox\" name=\"remember_me\"/> remember me\r\n</div> \r\n</form>\r\n<div className=\"row\">\r\n          <div className=\"col\">\r\n         <input type=\"button\" className=\"btn btn-primary\" value=\"Login\" onClick={this.loginHandeler} />\r\n          </div>\r\n          <div className=\"col text-right\">\r\n        <Link to={'/register'}>New User?</Link>\r\n          </div>\r\n          </div>\r\n  \r\n</div>\r\n</div>\r\n</div>\r\n<div className=\"col-md-2\"> </div>\r\n</div>\r\n);\r\n  }\r\n}\r\nexport default connect()(Home);"]},"metadata":{},"sourceType":"module"}